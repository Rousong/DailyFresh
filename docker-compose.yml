version: '3'
services:
  db:
    image: mysql:5.6
    #expose:
     # - "3306"
    ports:
      - "9999:3306"  # ports是把右边的docker容器端口映射到左边宿主机端口
      # expose的话就是暴露给 docker容器的端口 用links连接
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES utf8;' --innodb-flush-log-at-trx-commit=0
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=mysitedb
      - MYSQL_ROOT_PASSWORD=11111111

  redis:
    image: redis:3.2.8
    #command: service redis-server start
    command: redis-server --appendonly yes
    # restart: always
    #environment:
     # REDIS_URI: redis://redis:6379
    volumes:
      - ./redis:/data
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: '/app/docker/start-server.sh'
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=0
    ports:
      - "9000:8000"
      - "5555:5555"
    depends_on:
      - db
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_tasks.tasks worker
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    links:
      - redis

  nginx:
    image: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      #网站目录
      - .:/app
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      #日志文件
      - ./logs/nginx:/var/log/nginx



